####
#### This is a repo for the GorillaLogic recruiting test.
####

# NOTICE TO PUBLIC:
Please use anything you find in here ethically--meaning if you're taking
the GorillaLogic test figure it out for yourself.

Actually, if you want the job it's probably not a great idea do use what
I've written here, as this is my first time at all of this stuff.


Note that is my first time, outside of a classroom environment, building
anything in a public cloud.

This was done in Bash, because I had to figure out what I was doing as I went.
I would have preferred to use either SaltStack or Terraform, but I didn't have
the time to implement the former, and I don't know terraform at all.


Basic architecture:

+--[VPC]----------------------+
| +----[subnet]----------+    |<->[GATEWAY for port 22, 3000]
| |                      |    |   [Port 22 open to "my" subnet]
| | +-Docker Container-+ |    |   [Port 3000 open to 0.0.0.0/0]
| | |                  | |    |
| | +------------------+ |    |
| +----------------------+    |
+-----------------------------+

* An Amazon t2.micro instance running Ubuntu 18.04 (LTS) in a VPC with a /24 
IP range, and a subnet with a /25 off that. It could go smaller. 

* Does not use an Elastic IP address (I would do that for a "production" 
instance, and associate it with a DNS entry, which was not done)
* Application is run in a docker instance because building it in the 
  main instance wasn't working. 
* All the work is done in the  CreateVPC.sh script.
  [] But it does call a "docker_build.sh" script. 


Not done, for lack of time:
1) Docker file need to mount persistent storage so the app can be
   upgraded and backed up. 
2) Need method to signal instance to back up sqlite file and rebuild
   container for new code. 


I would have preferred to do most of this in Terraform or SaltStack, but
I don't know Terraform at all, and SaltStack is a bit heavy weight. Bash
was all I had time for.




Yes, the name is after the Neal Stephenson Novel. Because it amuses me. 
